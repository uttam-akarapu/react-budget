{"version":3,"sources":["logo.svg","components/MainHeader/MainHeader.js","components/ButtonOkCancelComp/ButtonOkCancel.js","components/TransactionForm/TransactionForm.js","components/BalanceAmt/BalanceAmt.js","components/History/History.js","components/History/HistoryData.js","components/IncExpBalance/IncomeExpBalance.js","App.js","reportWebVitals.js","index.js"],"names":["MainHeader","props","Header","as","type","title","ButtonOkCancel","Button","Group","style","marginTop","primary","onClick","addEntryHandler","desc","value","Content","secondary","resetEntryHandler","TransactionForm","useState","setValue","setdesc","Form","unstackable","Input","placeholder","label","width","icon","onChange","e","target","iconPosition","BalanceAmt","Statistic","size","color","Label","textAlign","expenses","Value","History","Segment","isExpense","Grid","colums","Row","Column","Icon","name","deleteEntryHandler","id","HistoryData","entries","map","item","IncomeExpBalance","columns","divided","App","initialEntries","setEntries","Container","deletedEntry","filter","entry","val","result","concat","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0eea2e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Header } from 'semantic-ui-react';\r\n\r\nconst MainHeader = props => {\r\n    return (\r\n        <Header as={props.type}> {props.title} </Header>\r\n    )\r\n}\r\n\r\nMainHeader.propTypes = {\r\n\r\n}\r\n\r\nexport default MainHeader\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from \"semantic-ui-react\";\r\n\r\nconst ButtonOkCancel = props => {\r\n    return (\r\n        <Button.Group style={{marginTop:20}}>\r\n          <Button primary onClick={()=>props.addEntryHandler(props.desc,props.value)}>Ok</Button>\r\n          <Button.Content/>\r\n          <Button secondary onClick={props.resetEntryHandler}>Cancel</Button>\r\n        </Button.Group>\r\n    )\r\n}\r\n\r\nButtonOkCancel.propTypes = {\r\n\r\n}\r\n\r\nexport default ButtonOkCancel\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ButtonOkCancel from \"../ButtonOkCancelComp/ButtonOkCancel\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst TransactionForm = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [desc, setdesc] = useState(\"\");\r\n\r\n  return (\r\n    <Form unstackable>\r\n      <Form.Group>\r\n        <Form.Input\r\n          placeholder=\"Enter\"\r\n          label=\"Description\"\r\n          width={12}\r\n          icon=\"\"\r\n          onChange={(e) => setdesc(e.target.value)}\r\n          value={desc}\r\n        />\r\n        <Form.Input\r\n          placeholder=\"value\"\r\n          label=\"Value\"\r\n          width={4}\r\n          icon=\"rupee\"\r\n          iconPosition=\"left\"\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <ButtonOkCancel\r\n        addEntryHandler={props.addEntryHandler}\r\n        desc={desc}\r\n        value={value}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nTransactionForm.propTypes = {};\r\n\r\nexport default TransactionForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Statistic } from 'semantic-ui-react';\r\n\r\nconst BalanceAmt = props => {\r\n    return (\r\n        <Statistic size={props.size} color={props.color}>\r\n                <Statistic.Label textAlign={props.textAlign}>{props.expenses}</Statistic.Label>\r\n                <Statistic.Value>{props.value}</Statistic.Value>\r\n              </Statistic>\r\n    )\r\n}\r\n\r\nBalanceAmt.propTypes = {\r\n\r\n}\r\n\r\nexport default BalanceAmt\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\r\n\r\nconst History = props => {\r\n    return (\r\n        <Segment color={`${props.isExpense ? \"red\":\"green\"}`}>\r\n        <Grid colums={3} textAlign=\"right\">\r\n          <Grid.Row>\r\n            <Grid.Column textAlign=\"left\" width={10}>\r\n              {props.desc}\r\n            </Grid.Column>\r\n            <Grid.Column textAlign=\"right\" width={3}>\r\n              {props.value}\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Icon name=\"edit\" />\r\n              <Icon name=\"trash\" onClick={()=>props.deleteEntryHandler(props.id)} />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    )\r\n}\r\n\r\nHistory.propTypes = {\r\n\r\n}\r\n\r\nexport default History;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport History from './History';\r\n\r\nconst HistoryData = props => {\r\n   \r\n\r\n    return (\r\n        <>\r\n        {\r\n            props.entries.map(item =>{\r\n    \r\n              return(\r\n                <History key={item.id} deleteEntryHandler={props.deleteEntryHandler} isExpense={item.isExpense} desc={item.desc} value={item.value} id={item.id}/>\r\n              )          \r\n            })        \r\n          }\r\n          </>\r\n    )\r\n}\r\n\r\nHistoryData.propTypes = {\r\n\r\n}\r\n\r\nexport default HistoryData;\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Segment, Grid } from 'semantic-ui-react';\r\nimport BalanceAmt from \"../BalanceAmt/BalanceAmt\";\r\n\r\nconst IncomeExpBalance = props => {\r\n    return (\r\n        <Segment textAlign=\"center\">\r\n        <Grid columns={2} divided>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n            <BalanceAmt size=\"tiny\" color=\"green\" expenses=\"Credit\" value=\"1000.00\"/>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column>\r\n             <BalanceAmt size=\"tiny\" color=\"red\" expenses=\"Debit\" value=\"500.00\"/>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    )\r\n}\r\n\r\nIncomeExpBalance.propTypes = {\r\n\r\n}\r\n\r\nexport default IncomeExpBalance\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {Container} from \"semantic-ui-react\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport TransactionForm from \"./components/TransactionForm/TransactionForm\";\nimport BalanceAmt from \"./components/BalanceAmt/BalanceAmt\";\nimport HistoryData from \"./components/History/HistoryData\";\nimport IncomeExpBalance from \"./components/IncExpBalance/IncomeExpBalance\";\nimport { useState } from \"react\";\n\n\nfunction App() {\n  const [entries, setEntries] = useState(initialEntries);\n  const [value, setValue] = useState('');\nconst [desc, setdesc] = useState('');\n\n  const deleteEntryHandler = (id) =>{\n      const deletedEntry = entries.filter(entry => entry.id !== id);\n      setEntries(deletedEntry);\n  }\n\n  const addEntryHandler = (desc,val) => {\n      const result = entries.concat({\n          id:entries.length+1,\n          desc:desc,\n          value:val\n      })\n      setEntries(result);\n      \n  }\n \n\n\n  return (\n    <Container>\n      <MainHeader title=\"Budget\" type=\"h1\" />\n      <BalanceAmt size=\"small\" expenses=\"Balance :\" value=\"2,500.00\" textAlign=\"left\"/>\n      <IncomeExpBalance />\n\n      <MainHeader title=\"History\" type=\"h3\" textAlign=\"left\" />\n      <HistoryData deleteEntryHandler={deleteEntryHandler} entries={entries}/>\n            \n\n      <MainHeader title=\"Add New Transaction\" type=\"h3\" textAlign=\"left\" />\n      <TransactionForm addEntryHandler={addEntryHandler}/>\n    </Container>\n  );\n}\n\nexport default App;\n\nconst initialEntries = [\n  {\n    id:1,\n    desc:\"Salary\",\n    isExpense:false,\n    value:\"$1000.00\"\n  },\n  {\n   id:2,\n    desc:\"Current Bill\",\n    isExpense:true,\n    value:\"$200.00\"\n  },\n  {\n    id:3,\n    desc:\"Water Bill\",\n    isExpense:true,\n    value:\"$50.00\"\n}\n];\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}