{"version":3,"sources":["logo.svg","components/MainHeader/MainHeader.js","components/ButtonOkCancelComp/ButtonOkCancel.js","components/TransactionForm/TransactionForm.js","components/BalanceAmt/BalanceAmt.js","components/History/History.js","components/History/HistoryData.js","components/IncExpBalance/IncomeExpBalance.js","App.js","reportWebVitals.js","index.js"],"names":["MainHeader","props","Header","as","type","title","ButtonOkCancel","Button","Group","style","marginTop","primary","Content","secondary","TransactionForm","Form","unstackable","Input","placeholder","label","width","icon","iconPosition","BalanceAmt","Statistic","size","color","Label","expenses","Value","value","History","Segment","isExpense","Grid","colums","textAlign","Row","Column","desc","Icon","name","HistoryData","useState","initialEntries","entries","map","item","IncomeExpBalance","columns","divided","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecb7abdc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Header } from 'semantic-ui-react';\r\n\r\nconst MainHeader = props => {\r\n    return (\r\n        <Header as={props.type}> {props.title} </Header>\r\n    )\r\n}\r\n\r\nMainHeader.propTypes = {\r\n\r\n}\r\n\r\nexport default MainHeader\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from \"semantic-ui-react\";\r\n\r\nconst ButtonOkCancel = props => {\r\n    return (\r\n        <Button.Group style={{marginTop:20}}>\r\n          <Button primary>Ok</Button>\r\n          <Button.Content/>\r\n          <Button secondary>Cancel</Button>\r\n        </Button.Group>\r\n    )\r\n}\r\n\r\nButtonOkCancel.propTypes = {\r\n\r\n}\r\n\r\nexport default ButtonOkCancel\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonOkCancel from \"../ButtonOkCancelComp/ButtonOkCancel\";\r\nimport {Form} from \"semantic-ui-react\";\r\n\r\nconst TransactionForm = props => {\r\n    return (\r\n        <Form unstackable>\r\n      <Form.Group>\r\n        <Form.Input placeholder=\"Enter\" label=\"Description\" width={12} icon=\"\"></Form.Input>\r\n        <Form.Input placeholder=\"value\" label=\"Value\" width={4} icon=\"rupee\" iconPosition=\"left\"></Form.Input>\r\n      </Form.Group>\r\n       \r\n      <ButtonOkCancel/>      \r\n    </Form>\r\n    )\r\n}\r\n\r\nTransactionForm.propTypes = {\r\n\r\n}\r\n\r\nexport default TransactionForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Statistic } from 'semantic-ui-react';\r\n\r\nconst BalanceAmt = props => {\r\n    return (\r\n        <Statistic size={props.size} color={props.color}>\r\n                <Statistic.Label>{props.expenses}</Statistic.Label>\r\n                <Statistic.Value>{props.value}</Statistic.Value>\r\n              </Statistic>\r\n    )\r\n}\r\n\r\nBalanceAmt.propTypes = {\r\n\r\n}\r\n\r\nexport default BalanceAmt\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\r\n\r\nconst History = props => {\r\n    return (\r\n        <Segment color={`${props.isExpense ? \"red\":\"green\"}`}>\r\n        <Grid colums={3} textAlign=\"right\">\r\n          <Grid.Row>\r\n            <Grid.Column textAlign=\"left\" width={10}>\r\n              {props.desc}\r\n            </Grid.Column>\r\n            <Grid.Column textAlign=\"right\" width={3}>\r\n              {props.value}\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Icon name=\"edit\" />\r\n              <Icon name=\"trash\" />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    )\r\n}\r\n\r\nHistory.propTypes = {\r\n\r\n}\r\n\r\nexport default History;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport History from './History';\r\n\r\nconst HistoryData = props => {\r\n    const [entries, setEntries] = useState(initialEntries);\r\n    return (\r\n        <>\r\n        {\r\n            entries.map(item =>{\r\n    \r\n              return(\r\n                <History isExpense={item.isExpense} desc={item.desc} value={item.value} />\r\n              )          \r\n            })        \r\n          }\r\n          </>\r\n    )\r\n}\r\n\r\nHistoryData.propTypes = {\r\n\r\n}\r\n\r\nexport default HistoryData;\r\n\r\nconst initialEntries = [\r\n    {\r\n      desc:\"Salary\",\r\n      isExpense:false,\r\n      value:\"$1000.00\"\r\n    },\r\n    {\r\n      desc:\"Current Bill\",\r\n      isExpense:true,\r\n      value:\"$200.00\"\r\n    },\r\n    {\r\n      desc:\"Water Bill\",\r\n      isExpense:true,\r\n      value:\"$50.00\"\r\n  }\r\n  ];\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Segment, Grid } from 'semantic-ui-react';\r\nimport BalanceAmt from \"../BalanceAmt/BalanceAmt\";\r\n\r\nconst IncomeExpBalance = props => {\r\n    return (\r\n        <Segment textAlign=\"center\">\r\n        <Grid columns={2} divided>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n            <BalanceAmt size=\"tiny\" color=\"green\" expenses=\"Incoming:\" value=\"1000.00\"/>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column>\r\n             <BalanceAmt size=\"tiny\" color=\"red\" expenses=\"Expenses:\" value=\"500.00\"/>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    )\r\n}\r\n\r\nIncomeExpBalance.propTypes = {\r\n\r\n}\r\n\r\nexport default IncomeExpBalance\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {Container} from \"semantic-ui-react\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport TransactionForm from \"./components/TransactionForm/TransactionForm\";\nimport BalanceAmt from \"./components/BalanceAmt/BalanceAmt\";\nimport History from \"./components/History/History\";\nimport HistoryData from \"./components/History/HistoryData\";\nimport IncomeExpBalance from \"./components/IncExpBalance/IncomeExpBalance\";\nimport { useState } from \"react\";\n\nfunction App() {\n \n  return (\n    <Container>\n      <MainHeader title=\"Budget\" type=\"h1\" />\n      <BalanceAmt size=\"small\" expenses=\"Balance :\" value=\"2,500.00\" />\n      <IncomeExpBalance />\n\n      <MainHeader title=\"History\" type=\"h3\" textAlign=\"left\" />\n      <HistoryData/>\n            \n\n      <MainHeader title=\"Add New Transaction\" type=\"h3\" textAlign=\"left\" />\n      <TransactionForm />\n    </Container>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}