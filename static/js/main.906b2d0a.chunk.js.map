{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","Container","Header","as","Statistic","size","Label","Value","Segment","textAlign","Grid","columns","divided","Row","Column","color","style","colums","width","Icon","name","Form","unstackable","Group","Input","placeholder","label","icon","iconPosition","Button","marginTop","primary","Content","secondary","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.906b2d0a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {\n  Container,\n  Header,\n  Statistic,\n  Segment,\n  Grid,\n  Icon,\n  Form,\n  Button,\n  ButtonGroup,\n} from \"semantic-ui-react\";\n\nfunction App() {\n  return (\n    <Container>\n      <Header as=\"h1\"> Budget </Header>\n\n      <Statistic size=\"small\">\n        <Statistic.Label>Your Balance: </Statistic.Label>\n        <Statistic.Value>2,500.00</Statistic.Value>\n      </Statistic>\n\n      <Segment textAlign=\"center\">\n        <Grid columns={2} divided>\n          <Grid.Row>\n            <Grid.Column>\n              <Statistic size=\"tiny\" color=\"green\">\n                <Statistic.Label style={{ textAlign: \"center\" }}>\n                  Incoming:\n                </Statistic.Label>\n                <Statistic.Value>1000.00</Statistic.Value>\n              </Statistic>\n            </Grid.Column>\n\n            <Grid.Column>\n              <Statistic size=\"tiny\" color=\"red\">\n                <Statistic.Label>Expenses:</Statistic.Label>\n                <Statistic.Value>500.00</Statistic.Value>\n              </Statistic>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n\n      <Header as=\"h3\" textAlign=\"left\">\n        History\n      </Header>\n      <Segment color=\"red\">\n        <Grid colums={3} textAlign=\"right\">\n          <Grid.Row>\n            <Grid.Column textAlign=\"left\" width={10}>\n              XXXX\n            </Grid.Column>\n            <Grid.Column textAlign=\"right\" width={3}>\n              XXXX\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Icon name=\"edit\" />\n              <Icon name=\"trash\" />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Segment color=\"green\">\n        <Grid colums={3} textAlign=\"right\">\n          <Grid.Row>\n            <Grid.Column textAlign=\"left\" width={10}>\n              XXXX\n            </Grid.Column>\n            <Grid.Column textAlign=\"right\" width={3}>\n              XXXX\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Icon name=\"edit\" />\n              <Icon name=\"trash\" />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Segment color=\"red\">\n        <Grid colums={3} textAlign=\"right\">\n          <Grid.Row>\n            <Grid.Column textAlign=\"left\" width={10}>\n              XXXX\n            </Grid.Column>\n            <Grid.Column textAlign=\"right\" width={3}>\n              XXXX\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Icon name=\"edit\" />\n              <Icon name=\"trash\" />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n\n    <Header as=\"h3\">Add New Transaction</Header>\n    <Form unstackable>\n      <Form.Group>\n        <Form.Input placeholder=\"Enter\" label=\"Description\" width={12} icon=\"\"></Form.Input>\n        <Form.Input placeholder=\"value\" label=\"Value\" width={4} icon=\"rupee\" iconPosition=\"left\"></Form.Input>\n      </Form.Group>\n        <Button.Group style={{marginTop:20}}>\n          <Button primary>Ok</Button>\n          <Button.Content/>\n          <Button secondary>Cancel</Button>\n        </Button.Group>\n      \n    </Form>\n\n\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}